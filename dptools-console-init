#!/bin/bash

# dptools-console-init
# console formatter with a lot of aliases
# by robert klebe, dotpointer

# changelog
# 2006-xx-xx 00:00:00 - first version
# 2012-12-20 00:00:00 - cleaning up
# 2014-04-26 00:00:00 - adding automatic coloring based on hostname md5sum
# 2016-03-04 00:00:00 - adding colors for less
# 2017-04-12 00:00:00 - adding git branches to PS1
# 2017-07-28 12:56:00 -	domain edit
# 2017-08-07 00:00:00 - adding desktop command
# 2017-08-24 00:00:00 - use vi for jed
# 2017-08-26 00:00:00 - allow dmesg for all users, like in debian 8
# 2017-08-26 00:00:00 - reverting dmesg fix, not working for non-root users
# 2018-03-14 00:00:00 - adding wget resume and removing retry limit
# 2018-03-17 00:00:00 - adding batstat
# 2018-04-26 17:34:00	adding jpegtran preference
# 2018-06-29 16:37:00 - adding commands present in the dptools directory, cleanup
# 2018-06-29 17:45:00 - rename from dp console setup.sh to dptools-console-init
# 2018-07-18 22:27:00 - updating colors and prompt
# 2018-07-19 17:13:00 - editing aliases, colors, prompt, setup script place
# 2018-07-19 17:14:04
# 2018-07-19 19:29:30 - indentation change, tab to 2 spaces
# 2018-09-26 20:00:00 - updating copy
# 2019-01-21 16:48:00 - updating prompt, adding git status for uncommitted changes
# 2019-01-23 20:22:00 - splitting git status and git porcelain
# 2019-03-12 08:46:00 - adding aliases
# 2019-05-17 20:41:00 - adding title alias
# 2019-06-12 20:26:00 - adding aliases
# 2019-06-14 20:36:39 - adding vmsetuuid alias
# 2019-06-19 23:18:00 - adding alias
# 2019-07-14 14:30:00 - excluding xterm from beep settings
# 2020-03-14 15:32:00 - adding alias
# 2020-05-14 02:45:00 - adding iptraf
# 2020-05-15 12:08:00 - adding git commands
# 2021-01-03 20:54:00 - adding ncget and ncoffer

# is TERM variable defined, ssh sets it to dump when using scp
if [[ -n "$TERM" && "$TERM" != "dumb" && "$TERM" != "xterm" ]]; then
  # ubuntu 14.10 cannot suddenly take blength and bfreq, so we must
  # make it shut up even if it fails
  setterm -blength 0 > /dev/null 2>&1
  setterm -bfreq 0 > /dev/null 2>&1
fi

# path - note that /usr/sbin is included for normal users, otherwise it isn't
PATH="$PATH:/var/scripts:/opt/dptools:/usr/sbin:/sbin"

alias addgroup='groupadd';
alias apt-update='apt update';
alias apt-upgrade='apt upgrade';
alias apt-install='apt install';
alias array='cat /proc/scsi/rr172x/0';
alias backupdir='tar -cvzf';
alias batstat='upower -i /org/freedesktop/UPower/devices/battery_BAT0';
alias bfg='bfg --no-blob-protection';
alias cd..='cd ..';
alias cd...='cd ...';
alias chkdsk='dosfsck -v -a -w';
alias clae='clear';
alias cl='clear';
alias clea='clear';
alias clr='clear';
alias cls='clear';
alias copy='cp -i -a';
alias correctlibreoffice='sudo sed -i "s/X-GIO-NoFuse=true/X-GIO-NoFuse=false/" /usr/share/applications/libreoffice-*';
alias cp='cp -a';
# alias date='date +"%n DATE: %Y-%m-%d%n TIME: %H:%M:%S%n"';
alias debian-version='echo "Linux standard base release:" && lsb_release -a && echo && echo -n "Debian version: " && cat /etc/debian_version';
alias delbackups='rm ./*~ 2> /dev/null; rm ./.*~ 2> /dev/null';
alias delete='rm -i';
alias del='rm -i';
alias desktop='cd $(xdg-user-dir DESKTOP)';
alias df='df -h';
alias dir='ls -la';
alias dirsize='du -sh';
alias dirsizemore='du -h --max-depth=1';
alias diskinfo='df -h';
alias dmesg='dmesg --time-format=ctime';
alias dmesÅ‹='dmesg';
alias dnsreload='killall dnsmasq -s SIGHUP';
alias dos2unix='dos2unix -k'
alias edit='jed';
alias edt='edit';
alias filldisk='yes abcdefghijklmnopqrstuvwxyz0123456789 > diskfiller';
alias fz='filezilla &';
# alias funk="function gd() { echo $1; } gd;";
alias g='git';
alias gitbranchfiles='git diff --name-only master';
alias gitdelbranch='gitdeletebranch';
alias gitdiffnow='git diff origin/master';
function git_reset_file() {
  git checkout origin/master "$1"
}
alias gitresetfile=git_reset_file;
alias gitstats='git diff master --stat';
alias glance='glances';
alias got='git';
# alias grepa2="grep --color -f ./ -rn";
alias iostat='iostat -m';
alias ipcfg='ifconfig';
alias ipconfig='ifconfig';
alias iptraf='iptraf-ng';
alias iptraffic='iptraf-ng';
alias jed='vi';
alias jpegtran='jpegtran -copy all';
alias jsonlint='python -m json.tool <';
alias ka='killall audacity; audacity &';
alias kca='killall caja';
alias kch='killall chromium';
alias kilall='killall';
alias killall='killall -9';
alias k='kill';
alias lastignored='tail --lines 2000 /var/log/messages|grep dnsmasq|grep ignored';
alias lastips='tail --lines 2000 /var/log/messages|grep DHCPOFFER|tac';
alias less='less -R';
alias logoff='logout';
alias ls-la='ls -la';
alias ls='ls --color --time-style=+%Y-%m\-%d\ %H\:%M\:%S';
alias lynx='lynx -accept_all_cookies';
alias mmesg='cat /var/log/messages';
alias move='mv -i';
alias mysqlrepair='mysqlcheck --all-databases --auto-repair --check -u root -p';
function ncget() {
  if [ -z "${1}" ] || [ -z "${2}" ]; then
    echo "Usage: ${0} <host> <output file to write to>";
    exit 1;
  fi
  nc "${1}" 5555 | pv > "${2}"
}
alias ncget=ncget;
function ncoffer() {
  if [ -z "${1}" ]; then
    echo "Usage: ${0} <input file to read from>";
    exit;
  fi
  cat "${1}" | pv | nc -l -p 5555;
}
alias ncoffer=ncoffer;
alias out='logout';
alias phpcheck='php -l';
alias phpc='php -l';
alias phpopentagscan='grep -rn "<?[^p]" --include=*.php';
alias polymwer='polymer';
alias ppp-down='ppp-stop';
alias ppp-up='ppp-on';
alias ps='ps -e';
alias putty='ssh -C';
alias q='exit';
alias qclea='clear';
alias reboot='reboot';
alias reprofile='source ~/.profile';
alias restart='reboot';
alias smesg='cat /var/log/syslog';
alias ssh='ssh -C';
alias tail='tail -n30';
# alias time='date +"%n DATE: %Y-%m-%d%n TIME: %H:%M:%S%n"';
function set_title() {
  echo -ne "\033]0;${1}\007"
}
alias title=set_title;
alias tlist='ps';
alias tracert='traceroute';
alias type='cat';
alias unamsg='cat /var/log/unattended-upgrades/unattended-upgrades-dpkg.log';
alias unmount='umount';
alias watch='watch -n1';
alias wget="wget --no-check-certificate --continue --tries=0";
alias vmlist='echo "Machines:"; vboxmanage list vms';
alias vmlistusb='vboxmanage list usbhost';
function set_vmsetuuid() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: vmsetuuid <vdi file> <new uuid>";
    return;
  fi
  VBoxManage internalcommands sethduuid "${1}" "${2}";
}
alias vmsetuuid=set_vmsetuuid;
alias volumedown="amixer -q -c0 set Master 3-%";
alias volumeup="amixer -q -c0 set Master 3+%";
alias vscode="code";
alias vwdial="wvdial";

# this will not work when xsession/mdm tries to read the config
# it does not understand functions
# as we cannot send in arguments using $1 in bash
# we do it as an exported function instead
# function grepa {
#	grep -rn "$1" --color ./
# }

# is there an md5sum binary in this system?
if [[ -f "/usr/bin/md5sum" && -x "/usr/bin/md5sum" ]]; then
  # get md5 of the hostname, here md5 should be checked for existence
  COLOR_MARKER_TEMP_NUMBER=$(hostname | md5sum);
  # cut out one character, convert it from hex to base 10, take second character
  COLOR_MARKER_TEMP_NUMBER=$((16#${COLOR_MARKER_TEMP_NUMBER:1:1}));
else
  # fallback to red
  COLOR_MARKER_TEMP_NUMBER=13;
fi

# color constants with special characters
# these work almost, but it messes up red on root
#PCOLOR_BLK="\[[0;30m\]";
#PCOLOR_BRD="\[[0;31m\]";
#PCOLOR_BGN="\[[0;32m\]";
#PCOLOR_BYW="\[[0;33m\]";
#PCOLOR_BBE="\[[0;34m\]";
#PCOLOR_BPE="\[[0;35m\]";
#PCOLOR_BCN="\[[0;36m\]";
#PCOLOR_BWT="\[[0;37m\]";
#PCOLOR_BWT="\[[1;30m\]";
#PCOLOR_HBK="\[[1;31m\]";
#PCOLOR_BGN="\[[1;32m\]";
#PCOLOR_BYW="\[[1;33m\]";
#PCOLOR_BBK="\[[1;34m\]";
#PCOLOR_BPE="\[[1;35m\]";
#PCOLOR_BCN="\[[1;36m\]";
#PCOLOR_BWT="\[[1;37m\]";

# more color constants
# unescaped, makes prompt longer than it is with wrapping
#PCOLOR_BLK='\033[30m'
#PCOLOR_BWT='\033[0;30;1m'
#PCOLOR_BRD='\033[31m'
#COLOR_HBK='\033[0;31;1m'
#PCOLOR_BGN='\033[32m'
#PCOLOR_BGN='\033[0;32;1m'
#PCOLOR_BYW='\033[33m'
#PCOLOR_BYW='\033[0;33;1m'
#PCOLOR_BBE='\033[34m'
#PCOLOR_BBK='\033[0;34;1m'
#PCOLOR_BPE='\033[35m'
#PCOLOR_BPE='\033[0;35;1m'
#PCOLOR_BCN='\033[36m'
#PCOLOR_BCN='\033[0;36;1m'
#PCOLOR_BWT='\033[37m'
#PCOLOR_BWT='\033[0;37;1m'

# color constants
# these are unescaped and makes bash believe that
# the prompt is longer than it is
#PCOLOR_BLK="[0;30m"
#PCOLOR_BRD="[0;31m"
#PCOLOR_BGN="[0;32m"
#PCOLOR_BYW="[0;33m"
#PCOLOR_BBE="[0;34m"
#PCOLOR_BPE="[0;35m"
#PCOLOR_BCN="[0;36m"
#PCOLOR_BWT="[0;37m"
#PCOLOR_BWT="[1;30m"
#PCOLOR_HBK="[1;31m"
#PCOLOR_BGN="[1;32m"
#PCOLOR_BYW="[1;33m"
#PCOLOR_BBK="[1;34m"
#PCOLOR_BPE="[1;35m"
#PCOLOR_BCN="[1;36m"
#PCOLOR_BWT="[1;37m"

#PCOLOR_BLK="\001\033[00;30m\002";
#PCOLOR_BRD="\001\033[00;31m\002";
#PCOLOR_BGN="\001\033[00;32m\002";
#PCOLOR_BYW="\001\033[00;33m\002";
#PCOLOR_BBE="\001\033[00;34m\002";
#PCOLOR_BPE="\001\033[00;35m\002";
#PCOLOR_BCN="\001\033[00;36m\002";
#PCOLOR_BWT="\001\033[00;37m\002";
#PCOLOR_BWT="\001\033[01;30m\002";
#PCOLOR_BRD="\001\033[01;31m\002";
#PCOLOR_BGN="\001\033[01;32m\002";
#PCOLOR_BYW="\001\033[01;33m\002";
#PCOLOR_BBK="\001\033[01;34m\002";
#PCOLOR_BPE="\001\033[01;35m\002";
#PCOLOR_BCN="\001\033[01;36m\002";
#PCOLOR_BWT="\001\033[01;37m\002";

# black 30
# red 31
# green 32
# yellow 33
# blue 34
# purple 35
# cyan 36
# white 37

# use \001 instead of \[, and \033 instead of \e (escape)
# when echoing in scripts, do unescaped, when echoing in prompt
# do escaped
# 001-002 is needed within PS1 and within functions for prompt
# but prints garbage when echoing in scripts

# normal unescaped colors for echo
COLOR_NBK="\033[00;30m";
COLOR_NRD="\033[00;31m";
COLOR_NGN="\033[00;32m";
COLOR_NYW="\033[00;33m";
COLOR_NBE="\033[00;34m";
COLOR_NPE="\033[00;35m";
COLOR_NCN="\033[00;36m";
COLOR_NWT="\033[00;37m";

# bold unescaped colors for echo
COLOR_BBK="\033[01;30m";
COLOR_BRD="\033[01;31m";
COLOR_BGN="\033[01;32m";
COLOR_BYW="\033[01;33m";
COLOR_BBE="\033[01;34m";
COLOR_BPE="\033[01;35m";
COLOR_BCN="\033[01;36m";
COLOR_BWT="\033[01;37m";

# normal prompt colors
PCOLOR_NBK="\001\033[00;30m\002";
PCOLOR_NRD="\001\033[00;31m\002";
PCOLOR_NGN="\001\033[00;32m\002";
PCOLOR_NYW="\001\033[00;33m\002";
PCOLOR_NBE="\001\033[00;34m\002";
PCOLOR_NPE="\001\033[00;35m\002";
PCOLOR_NCN="\001\033[00;36m\002";
PCOLOR_NWT="\001\033[00;37m\002";

# bold prompt colors
PCOLOR_BBK="\001\033[01;30m\002";
PCOLOR_BRD="\001\033[01;31m\002";
PCOLOR_BGN="\001\033[01;32m\002";
PCOLOR_BYW="\001\033[01;33m\002";
PCOLOR_BBE="\001\033[01;34m\002";
PCOLOR_BPE="\001\033[01;35m\002";
PCOLOR_BCN="\001\033[01;36m\002";
PCOLOR_BWT="\001\033[01;37m\002";
RESET="\001\033[0;00m\002"

# color test
#echo -e "${COLOR_NBK}normal black"
#echo -e "${COLOR_NRD}normal red"
#echo -e "${COLOR_NGN}normal green"
#echo -e "${COLOR_NYW}normal yellow"
#echo -e "${COLOR_NBE}normal blue"
#echo -e "${COLOR_NCN}normal cyan"
#echo -e "${COLOR_NWT}normal white"

#echo -e "${COLOR_BBK}bold black"
#echo -e "${COLOR_BRD}bold red"
#echo -e "${COLOR_BGN}bold green"
#echo -e "${COLOR_BYW}bold yellow"
#echo -e "${COLOR_BBE}bold blue"
#echo -e "${COLOR_BCN}bold cyan"
#echo -e "${COLOR_BWT}bold white"

# translate selected marker color number to real color
case $COLOR_MARKER_TEMP_NUMBER in
  0 )
    COLOR_MARKER="$PCOLOR_BWT"; # black shows nothing
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  1 )
    COLOR_MARKER="$PCOLOR_BWT";
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  2 )
    COLOR_MARKER="$PCOLOR_BGN";
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  3 )
    COLOR_MARKER="$PCOLOR_BYW";
    COLOR_NOTICE="$PCOLOR_BBE";
    ;;
  4 )
    COLOR_MARKER="$PCOLOR_BBE";
    COLOR_NOTICE="$PCOLOR_BYW";
    ;;
  5 )
    COLOR_MARKER="$PCOLOR_BPE";
    COLOR_NOTICE="$PCOLOR_BCN";
    ;;
  6 )
    COLOR_MARKER="$PCOLOR_BCN";
    COLOR_NOTICE="$PCOLOR_BPE";
    ;;
  7 )
    COLOR_MARKER="$PCOLOR_BRD";
    COLOR_NOTICE="$PCOLOR_BGN";
    ;;
  8 )
    COLOR_MARKER="$PCOLOR_BWT";
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  9 )
    COLOR_MARKER="$PCOLOR_BRD";
    COLOR_NOTICE="$PCOLOR_BGN";
    ;;
  10 )
    COLOR_MARKER="$PCOLOR_BGN";
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  11 )
    COLOR_MARKER="$PCOLOR_BYW";
    COLOR_NOTICE="$PCOLOR_BBE";
    ;;
  12 )
    COLOR_MARKER="$PCOLOR_BBK";
    COLOR_NOTICE="$PCOLOR_BRD";
    ;;
  13 )
    COLOR_MARKER="$PCOLOR_BPE";
    COLOR_NOTICE="$PCOLOR_BCN";
    ;;
  14 )
    COLOR_MARKER="$PCOLOR_BCN";
    COLOR_NOTICE="$PCOLOR_BPE";
    ;;
  15 )
    COLOR_MARKER="$PCOLOR_BWT"
    ;;
esac

# find out if in a git repo, write out branch if so
parse_git_branch() {
  DATA=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/");

  # not empty?
  if [[ ! -z $DATA ]]; then

    # write branch
    # important for colors is -e
    # \001-\002 escape gives garbage on numeric branch names
    # no escape makes bash think prompt is longer than it is
    # \[-\] escape adds \[\[ to the beginning of the string

    echo -e "${DATA}";
  else
    echo "\$";
  fi
}

parse_git_porcelain() {
  DATA=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/");
  # not empty?
  if [[ ! -z $DATA ]]; then
    # add status for uncommited changes
    if [[ ! -z $(git status --porcelain 2> /dev/null) ]]; then
        DATA="$DATA";
      echo -e "+";
    fi
  fi
}

getu() {
  if [[ $USER == "root" ]]; then
    # prompt color gives garbage on numeric texts
    # same here, a numeric username will give garbage characters
    # around the username
    echo -e "${COLOR_NOTICE}${USER}";
  else
    echo -e "${USER}";
  fi
}


getw() {
  if [[ ${#PWD} -ge 30 ]]; then
    TMP=$(echo $PWD|rev);
    TMP=$(echo ${TMP:0:27}|rev);
    TMP="...$TMP";
    echo $TMP;
  else
    echo $PWD;
  fi
}

# setup the prompt with colors, slash at $() is very important, otherwise
# it won't run it every time
PS1="${COLOR_MARKER}<${PCOLOR_BWT}\t${COLOR_MARKER}|${PCOLOR_BWT}\$(getu)";
PS1+="${COLOR_MARKER}@${PCOLOR_BWT}\h${COLOR_MARKER}:${PCOLOR_BWT}\$(getw)${COLOR_MARKER}";
PS1+=":${PCOLOR_BWT}\$(parse_git_branch)\$(parse_git_porcelain)";
PS1+="${COLOR_MARKER}>${PCOLOR_BWT} ";
export PS1=$PS1

# is there a customization script to run too?
# -x for executable did not work when /var/scripts is a symlink
# so we try -e

# global version
if [ -e /etc/dptools/dptools-console-init ]; then
  . /etc/dptools/dptools-console-init
fi

# single user version
if [ -e $HOME/.dptools-console-init ]; then
        . $HOME/.dptools-console-init
fi
