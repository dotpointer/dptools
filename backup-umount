#!/bin/bash

# to unmount a encrypted backup image over samba
# by robert klebe

# changelog
# 2014-11-05 14:43:27 - initial version
# 2015-06-06 12:38:51 - updated version for dptools
# 2018-06-28 15:53:00 - cleanup
# 2018-07-19 19:29:29 - indentation change, tab to 2 spaces
# 2018-10-05 00:00:00 - adding checks for mounted status

# credentials
DIR_IMAGE="/mnt/backupimage";
DIR_SHARE="/mnt/backupshare";
LOOPDEVICE="/dev/loop0";
MAPPERNAME="backuploop";

CONFIG_FILE="/etc/dptools/backuptools";

if [ ! -f "$CONFIG_FILE" ]; then
  echo "Missing configuration file: $CONFIG_FILE";
  exit 1;
fi

source $CONFIG_FILE;

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root";
   exit 1;
fi

if [[ $(findmnt -M "$DIR_IMAGE") ]]; then
  # unmount the image dir
  echo "Unmounting image dir: $DIR_IMAGE";
  umount $DIR_IMAGE;
  if [[ $? != 0 ]]; then
    echo "Failed unmounting dir: $DIR_IMAGE";
    exit 1;
  fi
else
  echo "Not mounted, will not continue: $DIR_IMAGE."
  exit;
fi

# close the luks mapping
echo "Closing LUKS mapper: /dev/mapper/$MAPPERNAME";
cryptsetup luksClose /dev/mapper/$MAPPERNAME
if [[ $? != 0 ]]; then
  echo "Failed closing LUKS mapper: /dev/mapper/$MAPPERNAME";
  exit 1;
fi

# delete the loop device
echo "Deleting loop device: $LOOPDEVICE";
losetup -d $LOOPDEVICE
if [[ $? != 0 ]]; then
  echo "Failed deleting loop device: $LOOPDEVICE";
  exit 1;
fi

if [[ $(findmnt -M "$DIR_SHARE") ]]; then
  # unmount the share dir
  echo "Unmounting share dir: $DIR_SHARE";
  umount $DIR_SHARE
  if [[ $? != 0 ]]; then
    echo "Failed unmounting dir: $DIR_SHARE";
    exit 1;
  fi
else
  echo "Not mounted, will not unmounted: $DIR_SHARE";
fi

# tell that it went fine
echo "Successfully closed backup";
