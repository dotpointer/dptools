#!/bin/bash

# dptools update script
# by robert klebe

# 2014-07-14 00:00:00 - initial version
# 2014-09-29 00:00:00 - adding profile reload
# 2014-11-01 00:00:00 - adding chmod correction on target dir
# 2016-12-27 20:09:00 - adding removal of unnecessary files
# 2017-02-01 19:08:00 - domain edit
# 2017-07-28 12:53:00 - domain edit
# 2018-06-28 16:59:00 - switching source from dotpointer.ga to gitlab repository
# 2018-06-29 17:14:00 - moving target directory from /var/scripts to /opt
# 2018-06-29 19:20:00 - bugfix, update failed to run

# target to put files into
targetdir="/opt/dptools"

# config dir
configdir="/etc/dptools"

if [ ! $(whoami) == "root" ]; then
    echo "Root user is required to update the dptools"
    exit
fi

# does target dir exist
if [ -d "$targetdir" ]; then
	cd "$targetdir";
	git pull
	if [ ! $? -eq 0 ]; then
		echo "Failed pulling data from git repository.";
		exit 1;
	fi
fi

# does target dir not exist
if [ ! -d "$targetdir" ]; then
	git clone https://gitlab.com/dotpointer/dptools.git /opt/dptools
	if [ ! $? -eq 0 ]; then
		echo "Failed cloning data from git repository.";
		exit 1;
	fi
fi

# remove unnecessary files
removefile="$targetdir/backup_databases"
if [ -f "$removefile" ] ; then
	echo "Removing unnecessary file: $removefile";
	rm $removefile
	if [ ! $? -eq 0 ] ; then
		echo "Failed removing file $removefile";
		exit 1
	fi
fi

# remove unnecessary files
removefile="$targetdir/convdb-iso-8859-1-to-utf-8"
if [ -f "$removefile" ] ; then
	echo "Removing deprecated file: $removefile";
	rm $removefile
	if [ ! $? -eq 0 ] ; then
		echo "Failed removing file $removefile";
		exit 1
	fi
fi

# remove deprecated files
removefile="$targetdir/dpconvert"
if [ -f "$removefile" ] ; then
	echo "Removing deprecated file: $removefile";
	rm $removefile
	if [ ! $? -eq 0 ] ; then
		echo "Failed removing file $removefile";
		exit 1
	fi
fi

# remove unnecessary files
removefile="$targetdir/ka"
if [ -f "$removefile" ] ; then
	echo "Removing unnecessary file: $removefile";
	rm $removefile
	if [ ! $? -eq 0 ] ; then
		echo "Failed removing file $removefile";
		exit 1
	fi
fi

# remove unnecessary files
removefile="$targetdir/kc"
if [ -f "$removefile" ] ; then
	echo "Removing unnecessary file: $removefile";
	rm $removefile
	if [ ! $? -eq 0 ] ; then
		echo "Failed removing file $removefile";
		exit 1
	fi
fi

echo "Setting 755 on dptools directory recursively"
chmod 755 -R "$targetdir"

# is targetdir not in path?
if [[ ! $PATH == *$targetdir* ]]
then
  echo ""
  echo "Installation notice!";
  echo ""
  echo "$targetdir was not found in your PATH variable."
  echo ""
  echo "This means that you cannot use the powers of dptools in this console."
  echo ""  
  echo "You need to add dptools-console-init to your ~/.bashrc and ~/.profile files."
  echo ""
  echo "Open the files in an editor and add the following line at the end of them:"
  echo ". $targetdir/dptools-console-init"
  echo ""
  echo "Then reload by running this: source ~/.profile"
# or is it in the path
else
  # then reload the profile
  echo "Reloading profile...";
  source ~/.profile
fi

# end message
echo "Update completed, thank you for using dptools"
